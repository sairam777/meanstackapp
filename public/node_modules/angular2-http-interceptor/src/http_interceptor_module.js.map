{"version":3,"file":"http_interceptor_module.js","sourceRoot":"","sources":["../../src/http_interceptor_module.ts"],"names":[],"mappings":"OAGO,EACL,QAAQ,EAGT,MAAM,eAAe;OACf,EACL,IAAI,EACJ,cAAc,EACd,UAAU,EACV,kBAAkB,EAClB,eAAe,EACf,mBAAmB,EACnB,YAAY,EACZ,kBAAkB,EAClB,UAAU,EACX,MAAM,eAAe;OACf,EAAC,eAAe,EAAC,MAAM,oBAAoB;OAC3C,EAAC,sBAAsB,EAAC,MAAM,4BAA4B;AACjE;;;;GAIG;AACH,4BAA4B,sBAA8C,EAAE,cAA8B;IACxG,MAAM,CAAC,IAAI,IAAI,CAAC,sBAAsB,EAAE,cAAc,CAAC,CAAC;AAC1D,CAAC;AACD;;GAEG;AACH;IACE,MAAM,CAAC,IAAI,kBAAkB,EAAE,CAAC;AAClC,CAAC;AACD;;GAEG;AACH;IAAA;IA2CA,CAAC;IA1CD;;;OAGG;IACW,sCAAgB,GAA9B,UAA+B,YAAwB;QACnD,MAAM,CAAC;YACL,QAAQ,EAAE,qBAAqB;YAC/B,SAAS,EACJ,YAAY;gBACf;oBACE,IAAI,EAAE,CAAC,eAAe,EAAE,UAAU,CAAC;oBACnC,OAAO,EAAE,sBAAsB;oBAC/B,QAAQ,EAAE,sBAAsB;iBACjC;gBACD;oBACE,IAAI,EAAE,CAAC,sBAAsB,EAAE,cAAc,CAAC;oBAC9C,OAAO,EAAE,IAAI;oBACb,UAAU,EAAE,WAAW;iBACxB;gBACD,UAAU;gBACV;oBACE,OAAO,EAAE,cAAc;oBACvB,QAAQ,EAAE,kBAAkB;iBAC7B;gBACD;oBACE,OAAO,EAAE,eAAe;oBACxB,QAAQ,EAAE,mBAAmB;iBAC9B;gBACD,UAAU;gBACV;oBACE,OAAO,EAAE,YAAY;oBACrB,UAAU,EAAE,+BAA+B;iBAC5C;cACF;SACF,CAAC;IACJ,CAAC;IACI,gCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,QAAQ,EAAE;KACjB,CAAC;IACF,kBAAkB;IACX,oCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,4BAAC;AAAD,CAAC,AA3CD,IA2CC;AAED;IACA,gBAAgB;IAChB,qBAAqB,CAAC,UAAU,CAAC;IACjC;;;OAGG;IACH,qBAAqB,CAAC,cAAc,CAAC;AACrC,CAAC","sourcesContent":["/**\r\n * Created by yulonh on 2016/11/22.\r\n */\r\nimport {\r\n  NgModule,\r\n  ModuleWithProviders,\r\n  Provider\r\n} from '@angular/core';\r\nimport {\r\n  Http,\r\n  RequestOptions,\r\n  XHRBackend,\r\n  BaseRequestOptions,\r\n  ResponseOptions,\r\n  BaseResponseOptions,\r\n  XSRFStrategy,\r\n  CookieXSRFStrategy,\r\n  BrowserXhr\r\n} from '@angular/http';\r\nimport {HttpInterceptor} from './http_interceptor';\r\nimport {HttpInterceptorBackend} from './http_interceptor_backend';\n/**\n * @param {?} httpInterceptorBackend\n * @param {?} requestOptions\n * @return {?}\n */\nexport function httpFactory(httpInterceptorBackend: HttpInterceptorBackend, requestOptions: RequestOptions): Http {\r\n  return new Http(httpInterceptorBackend, requestOptions);\r\n}\n/**\n * @return {?}\n */\nexport function createDefaultCookieXSRFStrategy() {\r\n  return new CookieXSRFStrategy();\r\n}\n/**\n * The module that includes http interceptor providers\n */\nexport class HttpInterceptorModule {\n/**\n * @param {?} interceptors\n * @return {?}\n */\npublic static withInterceptors(interceptors: Provider[]): ModuleWithProviders {\r\n    return {\r\n      ngModule: HttpInterceptorModule,\r\n      providers: [\r\n        ...interceptors,\r\n        {\r\n          deps: [HttpInterceptor, XHRBackend],\r\n          provide: HttpInterceptorBackend,\r\n          useClass: HttpInterceptorBackend,\r\n        },\r\n        {\r\n          deps: [HttpInterceptorBackend, RequestOptions],\r\n          provide: Http,\r\n          useFactory: httpFactory,\r\n        },\r\n        BrowserXhr,\r\n        {\r\n          provide: RequestOptions,\r\n          useClass: BaseRequestOptions\r\n        },\r\n        {\r\n          provide: ResponseOptions,\r\n          useClass: BaseResponseOptions\r\n        },\r\n        XHRBackend,\r\n        {\r\n          provide: XSRFStrategy,\r\n          useFactory: createDefaultCookieXSRFStrategy\r\n        },\r\n      ]\r\n    };\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HttpInterceptorModule_tsickle_Closure_declarations() {\n/** @type {?} */\nHttpInterceptorModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHttpInterceptorModule.ctorParameters;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}