{"version":3,"file":"http_interceptor_connection.js","sourceRoot":"","sources":["../../src/http_interceptor_connection.ts"],"names":[],"mappings":"OAOO,EACL,UAAU,EAGX,MAAM,MAAM;AACb;IAKA;;;OAGG;IACH,mCAAY,iBAAsC,EAAE,UAAsB;QAT1E,iBAyBC;QAfG,IAAI,CAAC,QAAQ,GAAG,IAAI,UAAU,CAC5B,UAAC,gBAAoC;YACnC,KAAI,CAAC,YAAY,GAAG,iBAAiB,CAAC,SAAS,CAAC,UAAC,GAAG;gBAChD,KAAI,CAAC,OAAO,GAAG,GAAG,CAAC;gBACnB,IAAI,aAAa,GAAG,UAAU,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;gBACrD,aAAa,CAAC,QAAQ,CAAC,SAAS,CAC9B,UAAC,QAAQ,IAAK,OAAA,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,EAA/B,CAA+B,EAC7C,UAAC,KAAK,IAAK,OAAA,gBAAgB,CAAC,KAAK,CAAC,KAAK,CAAC,EAA7B,CAA6B,EACxC,cAAM,OAAA,gBAAgB,CAAC,QAAQ,EAAE,EAA3B,CAA2B,CAClC,CAAC;YACJ,CAAC,EACD,UAAC,KAAK,IAAK,OAAA,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,EAApB,CAAoB,CAAC,CAAC;QACrC,CAAC,CACF,CAAC;IACJ,CAAC;IACH,gCAAC;AAAD,CAAC,AAzBD,IAyBC;AAED;IACA,gBAAgB;IAChB,yBAAyB,CAAC,SAAS,CAAC,UAAU,CAAC;IAC/C,gBAAgB;IAChB,yBAAyB,CAAC,SAAS,CAAC,OAAO,CAAC;IAC5C,gBAAgB;IAChB,yBAAyB,CAAC,SAAS,CAAC,QAAQ,CAAC;IAC7C,gBAAgB;IAChB,yBAAyB,CAAC,SAAS,CAAC,YAAY,CAAC;AACjD,CAAC","sourcesContent":["import {\r\n  Connection,\r\n  ReadyState,\r\n  Request,\r\n  XHRBackend,\r\n  Response\r\n} from '@angular/http';\r\nimport {\r\n  Observable,\r\n  Observer,\r\n  Subscription\r\n} from 'rxjs';\nexport class HttpInterceptorConnection implements Connection {\npublic readyState: ReadyState;\npublic request: Request;\npublic response: Observable<Response>;\npublic subscription: Subscription;\n/**\n * @param {?} requestObservable\n * @param {?} xhrBackend\n */\nconstructor(requestObservable: Observable<Request>, xhrBackend: XHRBackend) {\r\n    this.response = new Observable<Response>(\r\n      (responseObserver: Observer<Response>) => {\r\n        this.subscription = requestObservable.subscribe((req) => {\r\n            this.request = req;\r\n            let xhrConnection = xhrBackend.createConnection(req);\r\n            xhrConnection.response.subscribe(\r\n              (response) => responseObserver.next(response),\r\n              (error) => responseObserver.error(error),\r\n              () => responseObserver.complete()\r\n            );\r\n          },\r\n          (error) => console.error(error));\r\n      }\r\n    );\r\n  }\r\n}\n\nfunction HttpInterceptorConnection_tsickle_Closure_declarations() {\n/** @type {?} */\nHttpInterceptorConnection.prototype.readyState;\n/** @type {?} */\nHttpInterceptorConnection.prototype.request;\n/** @type {?} */\nHttpInterceptorConnection.prototype.response;\n/** @type {?} */\nHttpInterceptorConnection.prototype.subscription;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}