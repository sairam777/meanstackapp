import { Observable } from 'rxjs';
export var HttpInterceptorConnection = (function () {
    /**
     * @param {?} requestObservable
     * @param {?} xhrBackend
     */
    function HttpInterceptorConnection(requestObservable, xhrBackend) {
        var _this = this;
        this.response = new Observable(function (responseObserver) {
            _this.subscription = requestObservable.subscribe(function (req) {
                _this.request = req;
                var xhrConnection = xhrBackend.createConnection(req);
                xhrConnection.response.subscribe(function (response) { return responseObserver.next(response); }, function (error) { return responseObserver.error(error); }, function () { return responseObserver.complete(); });
            }, function (error) { return console.error(error); });
        });
    }
    return HttpInterceptorConnection;
}());
function HttpInterceptorConnection_tsickle_Closure_declarations() {
    /** @type {?} */
    HttpInterceptorConnection.prototype.readyState;
    /** @type {?} */
    HttpInterceptorConnection.prototype.request;
    /** @type {?} */
    HttpInterceptorConnection.prototype.response;
    /** @type {?} */
    HttpInterceptorConnection.prototype.subscription;
}
//# sourceMappingURL=http_interceptor_connection.js.map